@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  --font-header: Kanit, sans-serif;
  --font-body: Anuphan, sans-serif;
  --font-mono: Martian Mono, monospace;
  --color-list: 193 213 238;
  --color-bg-dark: 009 005 024;
  --color-bg-light: 241 245 249;
  --color-faded-light: 139 158 176;
  /** FIXME */
  --color-faded-dark: 32 58 112;
  --color-faded-bg-light: 227 237 247;
  /** FIXME */
  --color-faded-bg-dark: 12 12 12;
  --color-base: var(--color-bg-light);
  --color-faded: var(--color-faded-light);
  --color-faded-bg: var(--color-faded-bg-light);
}

:root:is([data-mode="dark"]) {
  --color-list: 4 14 56;
  --color-base: var(--color-bg-dark);
  --color-faded: var(--color-faded-dark);
  --color-faded-bg: var(--color-faded-bg-dark);
}

@layer base {
  body {
    @apply bg-base font-sans text-light dark:text-dark;
  }

  h1,
  h2,
  h3 {
    @apply font-header;
  }

  h1 {
    @apply text-3xl font-extrabold;
  }

  h2 {
    @apply text-2xl font-semibold;
  }

  h3 {
    @apply text-xl uppercase;
  }

  .shadow-light {
    box-shadow: 4px 4px 20px 0px rgba(111, 140, 176, 0.41),
      -6px -6px 20px 0px #fff, 2px 2px 4px 0px rgba(114, 142, 171, 0.1);
  }

  .shadow-dark {
    box-shadow: 4px 4px 20px 0px rgba(111, 140, 176, 0.41),
      -6px -6px 20px 0px #111, 2px 2px 4px 0px rgba(114, 142, 171, 0.1);
  }

  button.beacon-btn {
    @apply shadow-light dark:shadow-dark;
    /* text-shadow: 0px 4px 4px #fff, 0 0 0 #000, 0px 4px 4px #fff; */
    /* FIXME: inset text shadows, is this possible? */
  }

  button {
    @apply font-medium;
  }
}

@layer utilities {
  @keyframes rotateCw {
    0% {
      rotate: 0deg;
    }

    100% {
      rotate: 360deg;
    }
  }

  @keyframes rotateCcw {
    0% {
      rotate: 0deg;
    }
    100% {
      rotate: -360deg;
    }
  }

  @keyframes shade {
    0% {
      @apply shadow-md;
    }
    33% {
      @apply shadow-xl;
    }
    66% {
      @apply shadow-sm;
    }
    100% {
      @apply shadow-md;
    }
  }

  .rotate-cw {
    animation: rotateCw 40s infinite linear;
  }

  .rotate-ccw {
    animation: rotateCcw 40s infinite linear;
  }

  .float {
    animation-name: shade;
    animation-duration: 10s;
    animation-iteration-count: infinite;
    animation-timing-function: ease-in-out;
  }
}

html,
body,
#root {
  height: 100%;
}

@keyframes load {
  0% {
    transform: translateX(0px);
  }
  100% {
    transform: translateX(400%);
  }
}

.load {
  animation-name: load;
  animation-duration: 1.5s;
  animation-iteration-count: infinite;
  animation-timing-function: ease-in-out;
}

.heading-page {
  color: #36597d;
  text-shadow: 10px 10px 15px rgba(54, 89, 125, 0.7);
  font-size: 28px;
  font-weight: 600;
  line-height: 20px;
}

.text-input-shadow {
  box-shadow: 4px 4px 14px 0px #c1d5ee inset,
    -4px -4px 9px 0px rgba(255, 255, 255, 0.88) inset;
}

/**
  If you don't specify a bg-color this effect will NOT work
*/
.neu {
  position: relative;
  border: solid 2px transparent;
  background-clip: padding-box;
  box-sizing: border-box;
  box-shadow: 4px 4px 20px 0px rgba(111, 140, 176, 0.41),
    -6px -6px 20px 0px #fff, 2px 2px 4px 0px rgba(114, 142, 171, 0.1);
}

:is([data-mode="dark"]) .neu {
  /* FIXME: i made literally all of this up */
  box-shadow: 4px 4px 20px 0px rgba(13, 24, 40, 0.41),
    -6px -6px 20px 0px #03011a, 2px 2px 4px 0px rgba(51, 64, 77, 0.1);
}

.neu::before {
  content: "";
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  z-index: -1;
  margin: -2px;
  border-radius: inherit;
  background: linear-gradient(to bottom, #ffffffff, #ffffff00),
    linear-gradient(to bottom right, #ffffff2c, #d6e3f3dc);
}

.beacon-btn::before {
  content: "";
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  z-index: -1;
  margin: -2px;
  border-radius: inherit;
}

:is([data-mode="dark"]) .neu::before {
  /* FIXME: i made literally all of this up */
  background: linear-gradient(to bottom, #000000aa, #00000000),
    linear-gradient(to bottom left, #1023377c, #050c2a2c);
}
