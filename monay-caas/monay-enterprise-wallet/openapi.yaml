openapi: 3.0.3
info:
  title: Monay Enterprise Wallet API
  description: API documentation for Monay Enterprise Wallet - Token Management & Treasury Operations
  version: 1.0.0
  contact:
    name: Monay Support
    email: support@monay.com
  license:
    name: Proprietary

servers:
  - url: http://localhost:3001/api
    description: Development server
  - url: https://api.monay.com/api
    description: Production server

tags:
  - name: Authentication
    description: User authentication and authorization
  - name: Tenants
    description: Multi-tenant management
  - name: Wallets
    description: Wallet operations
  - name: Transactions
    description: Transaction management
  - name: Billing
    description: Billing and payments
  - name: Compliance
    description: KYC/AML compliance

paths:
  /auth/login:
    post:
      tags: [Authentication]
      summary: User login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [email, password]
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '401':
          description: Invalid credentials

  /auth/logout:
    post:
      tags: [Authentication]
      summary: User logout
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Logout successful

  /tenants/current:
    get:
      tags: [Tenants]
      summary: Get current tenant
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Current tenant data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tenant'

  /tenants/{id}/switch:
    post:
      tags: [Tenants]
      summary: Switch to different tenant
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Tenant switched successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                  tenant:
                    $ref: '#/components/schemas/Tenant'

  /users/me/tenants:
    get:
      tags: [Tenants]
      summary: Get user's available tenants
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of available tenants
          content:
            application/json:
              schema:
                type: object
                properties:
                  tenants:
                    type: array
                    items:
                      $ref: '#/components/schemas/Tenant'
                  total:
                    type: integer

  /wallets:
    get:
      tags: [Wallets]
      summary: List wallets
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            default: 1
        - in: query
          name: limit
          schema:
            type: integer
            default: 20
        - in: query
          name: type
          schema:
            type: string
            enum: [enterprise, treasury, consumer]
      responses:
        '200':
          description: List of wallets
          content:
            application/json:
              schema:
                type: object
                properties:
                  wallets:
                    type: array
                    items:
                      $ref: '#/components/schemas/Wallet'
                  pagination:
                    $ref: '#/components/schemas/Pagination'

    post:
      tags: [Wallets]
      summary: Create new wallet
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateWallet'
      responses:
        '201':
          description: Wallet created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Wallet'

  /wallets/{id}:
    get:
      tags: [Wallets]
      summary: Get wallet details
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Wallet details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Wallet'

  /transactions:
    get:
      tags: [Transactions]
      summary: List transactions
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: wallet_id
          schema:
            type: string
        - in: query
          name: status
          schema:
            type: string
            enum: [pending, completed, failed]
        - in: query
          name: from_date
          schema:
            type: string
            format: date
        - in: query
          name: to_date
          schema:
            type: string
            format: date
        - in: query
          name: page
          schema:
            type: integer
            default: 1
        - in: query
          name: limit
          schema:
            type: integer
            default: 50
      responses:
        '200':
          description: List of transactions
          content:
            application/json:
              schema:
                type: object
                properties:
                  transactions:
                    type: array
                    items:
                      $ref: '#/components/schemas/Transaction'
                  pagination:
                    $ref: '#/components/schemas/Pagination'

    post:
      tags: [Transactions]
      summary: Create transaction
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTransaction'
      responses:
        '201':
          description: Transaction created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'

  /billing/metrics:
    get:
      tags: [Billing]
      summary: Get billing metrics
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Billing metrics
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillingMetrics'

  /billing/payments:
    get:
      tags: [Billing]
      summary: List payment history
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            default: 1
        - in: query
          name: limit
          schema:
            type: integer
            default: 20
      responses:
        '200':
          description: Payment history
          content:
            application/json:
              schema:
                type: object
                properties:
                  payments:
                    type: array
                    items:
                      $ref: '#/components/schemas/Payment'
                  pagination:
                    $ref: '#/components/schemas/Pagination'

    post:
      tags: [Billing]
      summary: Process payment
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProcessPayment'
      responses:
        '200':
          description: Payment processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'

  /billing/invoice/{month}:
    get:
      tags: [Billing]
      summary: Download invoice
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: month
          required: true
          schema:
            type: string
            pattern: '^\\d{4}-\\d{2}$'
      responses:
        '200':
          description: Invoice PDF
          content:
            application/pdf:
              schema:
                type: string
                format: binary

  /compliance/kyc:
    get:
      tags: [Compliance]
      summary: Get KYC status
      security:
        - bearerAuth: []
      responses:
        '200':
          description: KYC status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KYCStatus'

    post:
      tags: [Compliance]
      summary: Submit KYC documents
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                document_type:
                  type: string
                  enum: [passport, drivers_license, national_id]
                front:
                  type: string
                  format: binary
                back:
                  type: string
                  format: binary
      responses:
        '200':
          description: KYC documents submitted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KYCSubmission'

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    AuthResponse:
      type: object
      properties:
        token:
          type: string
        user:
          $ref: '#/components/schemas/User'
        tenant:
          $ref: '#/components/schemas/Tenant'

    User:
      type: object
      properties:
        id:
          type: string
        email:
          type: string
          format: email
        name:
          type: string
        role:
          type: string
          enum: [admin, user, viewer]

    Tenant:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        tenant_code:
          type: string
        type:
          type: string
          enum: [enterprise, consumer]
        billing_tier:
          type: string
          enum: [starter, professional, enterprise]
        status:
          type: string
          enum: [active, suspended, inactive]

    Wallet:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        type:
          type: string
          enum: [enterprise, treasury, consumer]
        address:
          type: string
        network:
          type: string
          enum: [base, solana, polygon]
        balance:
          type: number
        currency:
          type: string
        status:
          type: string
          enum: [active, frozen, closed]
        created_at:
          type: string
          format: date-time

    CreateWallet:
      type: object
      required: [name, type, network]
      properties:
        name:
          type: string
        type:
          type: string
          enum: [enterprise, treasury, consumer]
        network:
          type: string
          enum: [base, solana, polygon]
        initial_balance:
          type: number
          default: 0

    Transaction:
      type: object
      properties:
        id:
          type: string
        wallet_id:
          type: string
        type:
          type: string
          enum: [deposit, withdrawal, transfer, swap]
        amount:
          type: number
        currency:
          type: string
        status:
          type: string
          enum: [pending, completed, failed]
        hash:
          type: string
        from_address:
          type: string
        to_address:
          type: string
        fee:
          type: number
        created_at:
          type: string
          format: date-time

    CreateTransaction:
      type: object
      required: [wallet_id, type, amount, to_address]
      properties:
        wallet_id:
          type: string
        type:
          type: string
          enum: [withdrawal, transfer, swap]
        amount:
          type: number
        to_address:
          type: string
        memo:
          type: string

    BillingMetrics:
      type: object
      properties:
        current_usage:
          type: object
          properties:
            transactions:
              type: integer
            wallets:
              type: integer
            storage_gb:
              type: number
            api_calls:
              type: integer
        limits:
          type: object
          properties:
            transactions:
              type: integer
            wallets:
              type: integer
            storage_gb:
              type: number
            api_calls:
              type: integer
        current_charges:
          type: number
        billing_period:
          type: object
          properties:
            start:
              type: string
              format: date
            end:
              type: string
              format: date

    Payment:
      type: object
      properties:
        id:
          type: string
        amount:
          type: number
        currency:
          type: string
        payment_method:
          type: string
          enum: [card, ach, wire, crypto]
        status:
          type: string
          enum: [pending, completed, failed]
        created_at:
          type: string
          format: date-time

    ProcessPayment:
      type: object
      required: [amount, payment_method_id]
      properties:
        amount:
          type: number
        payment_method_id:
          type: string
        use_usdxm:
          type: boolean
          default: false

    KYCStatus:
      type: object
      properties:
        status:
          type: string
          enum: [not_started, pending, approved, rejected]
        level:
          type: string
          enum: [basic, enhanced, full]
        verified_at:
          type: string
          format: date-time
        expires_at:
          type: string
          format: date-time

    KYCSubmission:
      type: object
      properties:
        submission_id:
          type: string
        status:
          type: string
          enum: [received, processing, review]
        estimated_review_time:
          type: string

    Pagination:
      type: object
      properties:
        page:
          type: integer
        limit:
          type: integer
        total:
          type: integer
        total_pages:
          type: integer